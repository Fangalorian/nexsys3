{"type":"group","name":"custom settings","enabled":true,"items":[{"type":"function","name":"SystemLoaded","enabled":true,"code":"//run_function('newPrompt', {}, 'ALL');\n\nnexSys.Defs.mounted._command = ['tell hydra come here', 'drop hydra', 'vault hydra'];\nnexSys.EqBalQueue._pre = 'light pipes|stand|vault hydra';"},{"type":"function","name":"CustomSettingsFromPackage","enabled":true,"code":"/* global nexSys */\nlet mySysSettings = {\n    sep: '|',\n    customPrompt: false,\n    echoAffGot: false,\n    echoAffLost: false,\n    echoDefGot: false,\n    echoDefLost: false,\n    echoBalanceGot: false,\n    echoBalanceLost: false,\n    echoTrackableGot: false,\n    echoTrackableLost: false,\n    echoPrioritySet: true,\n    \n    curingMethod: 'Transmutation',\n    sipHealthAt: 80,\n    sipManaAt: 80,\n    mossHealthAt: 80,\n    mossManaAt: 80,\n    focus: true,\n    focusOverHerbs: true,\n    tree: true,\n    clot: true,\n    clotAt: 5,\n    insomnia: true,\n    fracturesAbove: 30,\n    manaAbilitiesAbove: 1,\n    batch: true\n};\n\nnexSys.updateAndSaveModel('CustomSystemSettings', nexSys.sys.settings, mySysSettings);\n\n/*\nNeed to add priority for these\n    'crushedthroat', \n    'dazzled', \n    'depression', \n    'grievouswounds', \n    'indifference', \n    'retribution', \n    'shadowmadness',\n*/\nlet myAffPrios = {\n    //serverside affs 1-26, 26=ignore\n    aeon: 2,\n    concussion: 2,\n    anorexia: 2,\n    sleeping: 2,\n\n\n    heartseed: 3,\n    paralysis: 3,\n    guilt: 3,\n    skullfractures: 3,\n    \n    hypothermia: 4,\n    impatience: 4,\n    torntendons: 4,\n\n    pyramides: 5,\n    mycalium: 5,\n    flushings: 5,\n    rebbies: 5,\n    parasite: 5,\n    sandfever: 5,\n    hypochondria: 5,\n    lovers: 5,\n    itching: 5,\n    pacified: 5,\n    peace: 5,\n    scytherus: 5,\n\n    asthma: 6,\n    bound: 6,\n    daeggerimpale: 6,\n    clumsiness: 6,\n    entangled: 6,\n    impaled: 6,\n    sensitivity: 6,\n    transfixation: 6,\n    weariness: 6,\n    webbed: 6,\n\n    damagedleftleg: 7,\n    damagedrightleg: 7,\n    darkshade: 7,\n    mangledleftleg: 7,\n    mangledrightleg: 7,\n\n    brokenleftleg: 8,\n    brokenrightleg: 8,\n    confusion: 8,\n    hallucinations: 8,\n    hypersomnia: 8,\n\n    disrupted: 9,\n    mangledhead: 9,\n    prone: 9,\n    stupidity: 9,\n    voyria: 9,\n\n    airdisrupt: 10,\n    brokenleftarm: 10,\n    brokenrightarm: 10,\n    slickness: 10,\n    waterdisrupt: 10,\n    wristfractures: 10,\n\n    indifference: 11,\n    retribution: 11,\n    shadowmadness: 11,\n    addiction: 11,\n    crackedribs: 11,\n    haemophilia: 11,\n    lethargy: 11,\n    nausea: 11,\n    whisperingmadness: 11,\n\n    damagedhead: 12,\n    hellsight: 12,\n    recklessness: 12,\n\n    damagedleftarm: 13,\n    damagedrightarm: 13,\n    healthleech: 13,\n    manaleech: 13,\n    temperedcholeric: 13,\n    temperedmelancholic: 13,\n    temperedphlegmatic: 13,\n    temperedsanguine: 13,\n\n    disloyalty: 14,\n    dissonance: 14,\n    dizziness: 14,\n    mangledleftarm: 14,\n    mangledrightarm: 14,\n    shyness: 14,\n\n    agoraphobia: 15,\n    claustrophobia: 15,\n    deadening: 15,\n    frozen: 15,\n    generosity: 15,\n    justice: 15,\n    loneliness: 15,\n    shivering: 15,\n    vertigo: 15,\n\n    dementia: 16,\n    mildtrauma: 16,\n    paranoia: 16,\n    serioustrauma: 16,\n\n    epilepsy: 17,\n\n    burning: 18,\n    laceratedthroat: 18,\n    slashedthroat: 18,\n    stuttering: 18,\n\n    selarnia: 19,\n\n    fear: 20,\n    masochism: 20,\n    scalded: 20,\n    dazed: 20,\n\n    //affs you can cure on your own, but no serverside, 30-49, 30=ignore\n    bleeding: 30,\n    amnesia:  30,\n    blackout: 30,\n\n    //def affs\n    insomnia: 10,\n    insulation: 20,\n    deafness: 21,\n    blindness: 22,\n\n    // unknowns, 100=ignore\n    harmonic: 100,\n    bop: 100,\n    spiritwrack: 100,\n    bedevil: 100,\n    loki: 100,\n    moon: 100,\n    evileye: 100,\n    dragoncurse: 100,\n    swiftcurse: 100,\n};\n\nnexSys.updateModel(nexSys.affTable.prios, myAffPrios);\nnexSys.saveModel('CustomAffSettings', nexSys.affTable);\n\nlet myDefKeepupPrios = {\n    // Normal defences\n    alertness: 0,\n    curseward: 0,\n    density: 0,\n    groundwatch: 0,\n    heldbreath: 0,\n    hypersight: 0,\n    lifevision: 0,\n    metawake: 0,\n    mindseye: 0,\n    reflections: 0,\n    shield: \t0,\n    softfocusing: 0,\n    telesense: 0,\n    treewatch: 0,\n    vigilance: 0,\n    insomnia: 10,\n\tdeathsight: 10,\n    speed: 15,\n    insulation: 20,\n    kola: 21,\n    deafness: 21,\n    blindness: 22,\n    temperance: 23,\n    cloak: 0,\n    airpocket: 0,\n    fangbarrier: 25,\n    levitating: 25,\n    nightsight: 25,\n    coldresist: 0,\n    electricresist: 0,\n  \tfireresist: 0,\n  \tmagicresist: 0,  \n  \tpoisonresist: 0,\n    rebounding: 0,\n    skywatch: 0,\n    selfishness: 25,\n    thirdeye: 25,\n\n    // class defences\n\n    // Dragon\n    dragonarmour: 0,\n    dragonbreath: 24,\n    \n    // Air Lord\n    skysight: 0,\n    tempest: 0,\n\n    // Occultist\n    arctar: 0,\n    devilmark: 0,\n    distortedaura: 0,\n    tentacles: 0,\n\n    // non-serverside defences 50=ignore\n    blocking: 0,\n    locketdeath: 0,\n    meditate: 0,\n    mounted: 0,\n    prismatic: 0,\n    'parrying left leg': 0,\n    'parrying right arm': 0,\n    'parrying left arm': 0,\n    'parrying head': 0,\n    'parrying torso': 0,\n    'parrying left': 0,\n    'parrying right': 0,\n    'parrying centre': 0,\n    'parrying right leg': 0,\n};\nconsole.log(myDefKeepupPrios);\nlet myDefStaticPrios = {\n    // Regular\n    mindseye: 10,\n    cloak: 24,\n\n    // Dragon\n    dragonarmour: 24,\n    \n    // Fire Lord\n    fireshroud: 25,\n\n    // Occultist\n    devilmark: 24,\n    shroud: 24,\n    lifevision: 20,\n};\n\nnexSys.updateModel(nexSys.defPrios.keepup, myDefKeepupPrios);\nnexSys.updateModel(nexSys.defPrios.static, myDefStaticPrios);\nnexSys.saveModel('CustomDefSettings', nexSys.defPrios);\n\nlet myCacheSettings = {\n    magnesium: 2,\n    plumbum: 1,\n    arsenic: 2,\n    potash: 2,\n    stannum: 1,\n    malachite: 1,\n    realgar: 1,\n    cinnabar: 1,\n    antimony: 2,\n    ferrum: 1,\n    quartz: 1,\n    quicksilver: 1,\n    aurum: 2,\n    calamine: 1,\n    cuprum: 1,\n    argentum: 1,\n    gypsum: 0,\n\n    //herbs\n    ginseng: 0,\n    bloodroot: 0,\n    kelp: 0,\n    hawthorn: 0,\n    lobelia: 0,\n    bellwort: 0,\n    ginger: 0,\n    bayberry: 0,\n    ash: 0,\n    goldenseal: 0,\n    moss: 0,\n    valerian: 0,\n    elm: 0,\n    skullcap: 0,\n    sileris: 0,\n    kola: 0,\n    cohosh: 0\n};\nnexSys.updateAndSaveModel('CustomCacheSettings', nexSys.cacheTable, myCacheSettings);\n\nnexSys.whiteList = ['Imyrr', 'Makenna', 'Grandue', 'Theosis', 'Kierra', 'Nyar', 'Senzu', 'Dalran', 'Dunn', 'Mizik', 'Paine'];\nnexSys.saveModel('LustWhiteList', nexSys.whiteList);"},{"type":"function","name":"newPrompt","enabled":true,"code":"client.generate_text_block = function(lines) {\n    let customPromptEnabled = nexSys.sys.settings.customPrompt;\n    let count = 0;\n\n    let timestamp;\n    if (client.show_timestamp_milliseconds === true)\n        timestamp = client.getTimeMS();\n    else\n        timestamp = client.getTimeNoMS();\n    let cl = \"timestamp mono no_out\";\n    timestamp = \"<span class=\\\"\" + cl + \"\\\">\" + timestamp + \"&nbsp;</span>\";\n\n    let res = '';\n\n    let counter = 0;\n    for (let i = 0; i < lines.length; ++i) {\n        let txt = lines[i].parsed_line;\n        let font = lines[i].monospace ? 'mono' : '';\n        let line = \"<p class=\\\"\" + font + \"\\\">\" + timestamp + (txt ? txt.formatted() : '') + \"</p>\";\n\n        if (lines[i].gag) continue;\n        //////// Moved because don't want gagged lines\n        if (logging && txt) append_to_log(line);\n\n        //if (lines[i].gag) continue;\n        counter++;\n        \n        // Added this snippet to allow print() to inject lines\n\t\tif (lines[i].type == 'html') {\n        \tline = `<div class=\"${font}\" display=\"inline-block\">${timestamp}${lines[i].line}</div>`;\n            txt = true;\n        }\n\n        if (txt) {\n            count++;\n            res += line;\n        }\n        \n        let pr = lines[i].parsed_prompt;\n        if (pr && (count > 0)) {   // no prompt if we gagged everything\n\n            //////// Added\n            if(customPromptEnabled) {\n                pr = nexSys.prompt.getCustomPrompt();\n            } else {\n                pr = pr.formatted();\n            }\n            \n            line = \"<div class=\\\"prompt \" + font + \"\\\">\" + timestamp + pr + \"</div>\";\n            if (logging) append_to_log(line);\n            res += line;\n        }\n\n        // empty line - include it if it's neither the first nor the last one\n        // using \"counter\" instead of \"i\" fixes problems where the empty line is included after channel markers and such\n        if ((!pr) && (!txt) && (counter > 1) && (i < lines.length - 1)) {\n            res += '<p>' + timestamp + '&nbsp;' + '</p>';\n        }\n    }\n    if (client.extra_break && res.length) res += \"<br />\";\n\n    return res;\n};\n\nObject.assign(nexSys.prompt, {\n    getPromptChunk(text, color) {\n        return $('<span></span>', {style: color?`color:${color}`:''}).text(text);\n    },\n    \n    getCustomPrompt() {\n        let vars = nexSys.prompt.vars;\n\n        if(vars.blackout) {\n            return nexSys.prompt.get_formatted_prompt('-', \"reset\", \"\");\n        }\n              \n        let prompt = $('<span></span>');\n        this.getPromptChunk(vars.paused, 'red').appendTo(prompt)\n        this.getPromptChunk(vars.aeon, 'red').appendTo(prompt)\n        this.getPromptChunk(vars.retard, 'blue').appendTo(prompt)\n        if (nexSys.Defs.shield.have) {\n        \tthis.getPromptChunk('([', '#42f5e0').appendTo(prompt)\n        }\n        this.getPromptChunk(vars.h, vars.hcolor).appendTo(prompt)\n        this.getPromptChunk(`(${vars.ph}) `, vars.hcolor).appendTo(prompt)\n        this.getPromptChunk(vars.m, vars.mcolor).appendTo(prompt)\n        this.getPromptChunk(`(${vars.pm}) `, vars.mcolor).appendTo(prompt)\n        if (nexSys.sys.isClass('Occultist')) {\n            this.getPromptChunk(`${nexSys.sys.char.karma}K `, 'green').appendTo(prompt)\n        }\n        if (vars.rage > 0) {\n        \tthis.getPromptChunk(`${vars.rage}R `, 'green').appendTo(prompt)\n        }\n        this.getPromptChunk(`${vars.eq}${vars.bal}|`).appendTo(prompt)\n        this.getPromptChunk(`${vars.c}${vars.k}${vars.d}${vars.b} `).appendTo(prompt)\n        if (nexSys.Defs.shield.have) {\n        \tthis.getPromptChunk('])', '#42f5e0').appendTo(prompt)\n        }\n        if (occultist.pvp) {\n        \tthis.getPromptChunk(`[${insight.state.physicalCount}|${insight.state.mentalCount}]`, 'yellow').appendTo(prompt)    \n        }\n        this.getPromptChunk(vars.affString, 'brown').appendTo(prompt)\n        if (occultist.pvp) {\n        \tthis.getPromptChunk(vars.taffstring, 'white').appendTo(prompt)    \n        }\n        this.getPromptChunk(vars.diffh, vars.diffhcolor).appendTo(prompt)\n        this.getPromptChunk(vars.diffm, vars.diffmcolor).appendTo(prompt)\n\n\t\tvars.diffm = '';\n        vars.diffh = '';\n        return prompt[0].outerHTML;\n    }\n});\n\nnexSys.prompt.vars = {\n    blackout: false,\n    h: \"0\",\n    m: \"0\",\n    e: \"0\",\n    w: \"0\",\n    hcolor: \"green\",\n    mcolor: \"green\",\n    ecolor: \"green\",\n    wcolor: \"green\",\n    rage: \"\",\n    xp: \"0\",\n    maxh: \"0\",\n    maxm: \"0\",\n    maxe: \"0\",\n    maxw: \"0\",\n    ph: \"100%\",\n    pm: \"100%\",\n    pe: \"100%\",\n    pw: \"100%\",\n    diffh: \"\",\n    diffm: \"\",\n    diffhcolor: \"green\",\n    diffmcolor: \"green\",\n    diffxp: \"\",\n    target: \"\",\n    eq: \"\",\n    bal: \"\",\n    c: \"\",\n    k: \"\",\n    d: \"\",\n    b: \"\",\n    affs: {},\n    affString: \"\",\n    taffstring: \"\",\n    paused: \"\",\n    retard: \"\",\n    aeon: \"\",\n    kai: \"\",\n    vitality: \"\",\n    kaitrance: \"\",\n    shintrance: \"\",\n    stance: \"\",\n};"},{"type":"group","name":"Gags","enabled":true,"actions":[],"items":[{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"You may eat another plant or mineral.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"Your mind is able to focus once again.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"You may drink another health or mana elixir.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"You may eat another bit of irid moss or potash.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"You may utilise the tree tattoo again.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"You may apply another salve to yourself.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"Your lungs have recovered enough to smoke another mineral or plant.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"You have recovered equilibrium.","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"gag","enabled":true}],"text":"You have recovered balance on all limbs.","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":false,"actions":[{"type":"script","enabled":true,"script":"gag_current_line();"}],"text":"^You have set the '(\\w+)' affliction to the (\\d+) priority\\.$","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":false,"actions":[{"type":"script","enabled":true,"script":"gag_current_line();"}],"text":"^You have set the '(\\w+)' defence to the (\\d+) priority\\.$","matching":"substring","whole_words":true,"case_sensitive":true}]},{"type":"group","name":"Denizens","enabled":true,"actions":[],"items":[{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('stunGotAffEvent');"}],"text":"^An ozhera \\w+ picks a large rock off the ground, throwing it straight at your head\\.$","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('stunGotAffEvent');"}],"text":"Lowering his head, a sneering psychopathic inmate runs towards you, knocking you back with the impact of his skull.","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('stunGotAffEvent');"}],"text":"Burnsie grabs your head with both hands and brings his head to yours with an audible crack, stunning you.","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('stunGotAffEvent');"}],"text":"A sturdy troll woman lowers her head and charges at you, slamming powerfully into your abdomen.","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('stunGotAffEvent');"}],"text":"A sleek dirangi leaps up into the air with blinding speed, bouncing nimbly off a wall before landing directly on top of you, knocking you to the floor.","matching":"substring","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('stunGotAffEvent');"}],"text":"A monstrous gamling spider sticks you with the end of one sharply hooked leg, pinning you to the ground mercilessly.","matching":"substring","whole_words":true,"case_sensitive":true}]},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('stunLostAffEvent');"}],"text":"^You are no longer stunned\\.$","matching":"regexp","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.eventStream.raiseEvent('SystemOutputAdd', 'light pipes');"}],"text":"^Your pipe, containing .+, has gone cold and dark\\.$","matching":"regexp","whole_words":true,"case_sensitive":true},{"type":"alias","name":"","enabled":true,"actions":[{"type":"command","enabled":true,"command":"blink","prefix_suffix":true},{"type":"script","enabled":true,"script":"client.send_direct = function(input, no_expansion)\n{\n    if (!input || typeof input == undefined)\n        return false;\n\n    var do_expansion = !no_expansion;\n\n    if (typeof input != \"string\")\n        input = input.toString();\n\n    client.command_counter++;\n    if (client.command_counter >= 200) {\n        if (client.command_counter == 200)\n            print('You seem to have sent more than 200 commands within a second. You probably have some runaway trigger or an endless alias loop - disabling commands for a while.', '#FF8080');\n        client.setup_command_counter();  // just in case -- had the interval disappear at one point\n        return;\n    }\n\n    var real_cmds = [];\n    if (do_expansion) {\n        var commands = [];\n        var split_regex = new RegExp(escapeRegExp(client.stack_delimiter), 'gm');\n        var parts = input.split(split_regex);\n\n        // Delimiter split\n        for (var i = 0; i < parts.length; ++i) {\n            var cmd = parts[i];\n            if (cmd == \"\") continue;\n            var cmds = [];\n            // Aliases\n            if (aliases_enabled)\n                cmds = handle_aliases(cmd);\n            else\n                cmds.push(cmd);\n\n            for (var j = 0; j < cmds.length; ++j)\n                commands.push(cmds[j]);\n        }\n\n        // Now process internal commands, expand variables and execute functions.\n        for (var i = 0; i < commands.length; ++i) {\n            var cmd = commands[i];\n\n            if (cmd.indexOf(\"@set\") == 0)\n            {\n                var temp = cmd.split(/ /);\n                if (temp[1] != \"\" && temp[2] != \"\")\n                {\n                    if (client.set_variable(temp[1], temp[2]))\n                    {\n                        print(\"Set \" + temp[1] + \" to \" + temp[2]);\n                        display_variables();\n                    }\n                    continue;\n                }\n            }\n\n            if (variables_enabled) cmd = handle_variables(cmd);\n\n            if (functions_enabled)\n            {\n                cmd = handle_functions(cmd);\n                if (!cmd) continue;\n            }\n\n            // This is a real command - add it to the queue\n            real_cmds.push(cmd);\n        }\n    } else\n        real_cmds.push(input);   // skip the cmds loop entirely if we don't expand anything\n\n    if (!real_cmds.length) return;\n    if (!ws) return;\n\n    for (var i = 0; i < real_cmds.length; ++i) {\n        var s = real_cmds[i];\n        if (client.echo_input)\n            print(`<span style='color:${client.color_inputecho}'>${s}</span>`, true);\n        ws_send(s + \"\\r\\n\");\n    }\n    last_send = new Date().getTime();\n}"}],"text":"bbtest","matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true},{"type":"alias","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"nexSys.prompt.getCustomPrompt = function() {\n    let vars = nexSys.prompt.vars;\n    let diffh = vars.diffh;\n    let diffm = vars.diffm;\n\n    vars.diffh = \"\";\n    vars.diffm = \"\";\n\n    if(vars.blackout) {\n        return nexSys.get_formatted_prompt('-', \"reset\", \"\");\n    }\n\n    return nexSys.get_formatted_prompt(\n        vars.paused + \"\", \"red\", \"\",\n        vars.aeon + \"\", \"red\", \"\",\n        vars.retard + \"\", \"blue\", \"\",\n        vars.h + \"\", vars.hcolor, nexSys.Defs.shield.have?'cyan':'',\n        \"(\" + vars.ph + \"), \", vars.hcolor, \"\",\n        vars.m + \"\", vars.mcolor, \"\",\n        \"(\" + vars.pm + \"), \", vars.mcolor, \"\",\n        vars.rage + \"R \", \"\", \"\", // CUSTOM ADD\n        /*vars.w + \", \", vars.wcolor, \"\",\n        vars.e + \" \", vars.ecolor, \"\",*/\n        vars.eq + vars.bal + \"|\", \"reset\", \"\",\n        vars.c + vars.k + vars.d + vars.b + \" \", \"reset\", \"\",\n        vars.target + \" \", \"green\", \"\",\n        /*vars.kai + \"\", \"reset\", \"\",\n        vars.kaitrance + \"\", \"blue\", \"\",\n        vars.vitality + \"\", \"purple\", \"\",\n        vars.stance + \" \", \"white\", \"\",*/\n        vars.affString + \" \", \"brown\", \"\",\n        diffh + \" \", vars.diffhcolor, \"\",\n        diffm + \" \", vars.diffmcolor, \"\"\n    );\n};\nnexSys.saveModel('CustomAffSettings', client.affTable);"}],"text":"ctest","matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true}],"description":"Nexsys user settings"}